<UserControl
    x:Class="Wordki.Views.BuilderPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:Wordki.Helpers"
    xmlns:converters="clr-namespace:Wordki.Helpers.Converters"
    xmlns:viewModels="clr-namespace:Wordki.ViewModels"
    xmlns:models="clr-namespace:Wordki.Models"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:command="http://www.galasoft.ch/mvvmlight"
    xmlns:valueDescription="clr-namespace:Controls.ValueDescription;assembly=Controls"
    mc:Ignorable="d"
    d:DesignHeight="900"
    d:DesignWidth="1200"
    d:DataContext="{d:DesignInstance {x:Type viewModels:BuilderViewModel}}"
    Style="{DynamicResource AppPageStyle}"
    KeyboardNavigation.IsTabStop="False">
    <UserControl.Resources>
        <Style
            x:Key="WinTextBoxStyle"
            BasedOn="{StaticResource AppTextBoxStyle}"
            TargetType="{x:Type TextBox}">
            <Setter
                Property="Margin"
                Value="5" />
            <Setter
                Property="Background"
                Value="Transparent" />
            <Setter
                Property="FontSize"
                Value="{Binding Path=Settings.FontSize}" />
            <Setter
                Property="TextWrapping"
                Value="Wrap" />
        </Style>

        <converters:DrawerToColorConverter
            x:Key="DrawerToColorConverter" />
        <converters:LanguageTypeToStringConverter
            x:Key="LanguageTypeToStringConverter" />
        <converters:WordCheckedToStringConverter
            x:Key="WordCheckedToStringConverter" />
        <converters:WordCheckedToBrushConverter
            x:Key="WordCheckedToBrushConverter" />

    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding
            Key="Enter"
            Command="{Binding Path=AddWordCommand}" />
        <KeyBinding
            Modifiers="Control+Alt"
            Key="Up"
            Command="{Binding Path=NextWordCommand}" />
        <KeyBinding
            Modifiers="Control+Alt"
            Key="Down"
            Command="{Binding Path=PreviousWordCommand}" />
        <KeyBinding
            Modifiers="Control+Alt"
            Key="Right"
            Command="{Binding Path=NextGroupCommand}" />
        <KeyBinding
            Modifiers="Control+Alt"
            Key="Left"
            Command="{Binding Path=PreviousGroupCommand}" />
        <KeyBinding
            Modifiers="Alt"
            Key="Delete"
            Command="{Binding Path=RemoveWordCommand}" />
    </UserControl.InputBindings>

    <DockPanel>
        <Grid
            DockPanel.Dock="Top">
            <!--Grid definition-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="3" />
                <ColumnDefinition
                    Width="5*" />
                <ColumnDefinition
                    Width="3" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>
            <!--Grid definition-->
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="3*" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>

            <TabControl
                Grid.Column="0"
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.ColumnSpan="3"
                Panel.ZIndex="2"
                KeyboardNavigation.IsTabStop="False"
                Style="{StaticResource AppInnerTabControlStyle}">
                <TabItem
                    Header="Plik"
                    Style="{StaticResource AppInnerTabItemStyle}">
                    <ScrollViewer
                        Style="{StaticResource AppScrollViewerStyle}">
                        <StackPanel
                            Background="{DynamicResource UsedNormalBrush}">

                            <Button
                                Command="{Binding BackCommand}"
                                Style="{StaticResource FlatButtonStyle}"
                                Content="Wróć" />

                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem
                    Header="Grupy"
                    Style="{StaticResource AppInnerTabItemStyle}">
                    <ScrollViewer
                        Style="{StaticResource AppScrollViewerStyle}">
                        <StackPanel
                            Background="{DynamicResource UsedNormalBrush}">
                            <helpers:ImageButton
                                Command="{Binding AddGroupCommand}"
                                Style="{StaticResource FlatButtonStyle}"
                                ImageSource="/Resources/Icons/GroupAdd.png"
                                Content="Dodaj grupę" />
                            <helpers:ImageButton
                                Command="{Binding AddClipboardGroupCommand}"
                                Style="{StaticResource FlatButtonStyle}"
                                Content="Grupa ze schowka" />
                            <helpers:ImageButton
                                Command="{Binding RemoveGroupCommand}"
                                Style="{StaticResource FlatButtonStyle}"
                                ImageSource="/Resources/Icons/GroupRemove.png"
                                Content="Usuń grupę" />
                            <helpers:ImageButton
                                Command="{Binding SplitGroupCommand}"
                                Style="{StaticResource FlatButtonStyle}"
                                ImageSource="/Resources/Icons/GroupSplit.png"
                                Content="Podziel grupę" />
                            <helpers:ImageButton
                                Command="{Binding ConnectGroupCommand}"
                                Style="{StaticResource FlatButtonStyle}"
                                ImageSource="/Resources/Icons/GroupConnect.png"
                                Content="Połącz grupy" />
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem
                    Header="Słowa"
                    Style="{StaticResource AppInnerTabItemStyle}">
                    <ScrollViewer
                        Style="{StaticResource AppScrollViewerStyle}">
                        <StackPanel
                            Background="{DynamicResource UsedNormalBrush}">
                            <helpers:ImageButton
                                Command="{Binding ShowWordsCommnad}"
                                Style="{StaticResource FlatButtonStyle}"
                                ImageSource="/Resources/Icons/GroupShow.png"
                                Content="Pokaż słowa" />
                            <helpers:ImageButton
                                Command="{Binding Path=FindSameWordCommand}"
                                Style="{StaticResource FlatButtonStyle}"
                                ImageSource="/Resources/Icons/GroupShow.png"
                                Content="Znajdź podobne" />
                            <helpers:ImageButton
                                Command="{Binding SwapLanguagesCommand}"
                                Style="{StaticResource FlatButtonStyle}"
                                Content="Zmień języki" />
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
            </TabControl>

            <DataGrid
                x:Name="GroupsGrid"
                Grid.Column="0"
                Grid.Row="0"
                Style="{StaticResource AppDataGridStyle}"
                HorizontalGridLinesBrush="{DynamicResource UsedPressedBrush}"
                ItemsSource="{Binding Path=Database.Groups}"
                SelectedItem="{Binding Path=SelectedGroup, Mode=TwoWay}"
                AutoGenerateColumns="false"
                CanUserAddRows="false"
                FontSize="14"
                KeyboardNavigation.IsTabStop="False"
                Background="Transparent">
                <i:Interaction.Behaviors>
                    <helpers:ScrollIntoViewBehavior />
                </i:Interaction.Behaviors>
                <DataGrid.Resources>
                    <Style
                        TargetType="{x:Type DataGridCell}">
                        <Setter
                            Property="IsTabStop"
                            Value="False" />
                    </Style>
                    <Style
                        TargetType="{x:Type DataGridRow}">
                        <Setter
                            Property="IsTabStop"
                            Value="False" />
                    </Style>
                    <SolidColorBrush
                        x:Key="{x:Static SystemColors.HighlightBrushKey}"
                        Color="{DynamicResource UsedHoverColor}" />
                    <SolidColorBrush
                        x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                        Color="{DynamicResource UsedHoverColor}" />
                </DataGrid.Resources>

                <DataGrid.ContextMenu>
                    <ContextMenu
                        Style="{StaticResource AppContextMenuStyle}">
                        <MenuItem
                            Header="Dodaj grupę"
                            Style="{StaticResource AppMenuItemStyle}"
                            Command="{Binding AddGroupCommand}" />
                        <MenuItem
                            Header="Usuń grupę"
                            Style="{StaticResource AppMenuItemStyle}"
                            Command="{Binding RemoveGroupCommand}" />
                        <MenuItem
                            Header="Połącz grupy"
                            Style="{StaticResource AppMenuItemStyle}"
                            Command="{Binding ConnectGroupCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}" />
                    </ContextMenu>
                </DataGrid.ContextMenu>

                <i:Interaction.Triggers>
                    <i:EventTrigger
                        EventName="SelectionChanged">
                        <command:EventToCommand
                            Command="{Binding Path=GroupSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        SortMemberPath="GroupName"
                        CanUserResize="false"
                        Header="Nazwa grupy"
                        Width="*"
                        HeaderStyle="{StaticResource AppDataGridColumnTemplateHeaderStyle}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="5,2"
                                    FontSize="20"
                                    Style="{StaticResource AppTextBlockStyle}"
                                    d:DataContext="{d:DesignInstance {x:Type models:Group}}"
                                    Text="{Binding Path=Name}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <GridSplitter
                Grid.Column="1"
                Grid.Row="0"
                Style="{StaticResource AppGridSplitterStyle}" />

            <DataGrid
                Grid.Column="4"
                Grid.Row="0"
                Style="{StaticResource AppDataGridStyle}"
                ItemsSource="{Binding Path=Words}"
                SelectedItem="{Binding Path=SelectedWord, Mode=TwoWay}"
                AutoGenerateColumns="false"
                HorizontalGridLinesBrush="{DynamicResource UsedPressedBrush}"
                CanUserAddRows="false"
                FontSize="14"
                KeyboardNavigation.IsTabStop="False">
                <i:Interaction.Behaviors>
                    <helpers:ScrollIntoViewBehavior />
                </i:Interaction.Behaviors>
                <DataGrid.Resources>
                    <Style
                        TargetType="{x:Type DataGridCell}">
                        <Setter
                            Property="IsTabStop"
                            Value="False" />
                    </Style>
                    <Style
                        TargetType="{x:Type DataGridRow}">
                        <Setter
                            Property="IsTabStop"
                            Value="False" />
                    </Style>
                    <SolidColorBrush
                        x:Key="{x:Static SystemColors.HighlightBrushKey}"
                        Color="{DynamicResource UsedHoverColor}" />
                    <SolidColorBrush
                        x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                        Color="{DynamicResource UsedHoverColor}" />
                </DataGrid.Resources>

                <DataGrid.ContextMenu>
                    <ContextMenu
                        Style="{StaticResource AppContextMenuStyle}">
                        <MenuItem
                            Header="Zamień słowa"
                            Style="{StaticResource AppMenuItemStyle}"
                            Command="{Binding Path=SwapSingleWordCommand}" />
                    </ContextMenu>
                </DataGrid.ContextMenu>

                <i:Interaction.Triggers>
                    <i:EventTrigger
                        EventName="SelectionChanged">
                        <command:EventToCommand
                            Command="{Binding Path=WordSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        SortMemberPath="Language1"
                        CanUserResize="false"
                        Header="Wyrazy"
                        Width="*"
                        HeaderStyle="{StaticResource AppDataGridColumnTemplateHeaderStyle}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel
                                    HorizontalAlignment="Stretch"
                                    Orientation="Vertical">
                                    <TextBlock
                                        Style="{StaticResource AppTextBlockStyle}"
                                        Margin="1,2"
                                        FontSize="20"
                                        d:DataContext="{d:DesignInstance {x:Type models:Word}}"
                                        Text="{Binding Path=Language1}"
                                        Foreground="{Binding Path=Checked, Converter={StaticResource WordCheckedToBrushConverter}}" />
                                    <TextBlock
                                        Style="{StaticResource AppTextBlockStyle}"
                                        Margin="1,2"
                                        FontSize="20"
                                        TextAlignment="Right"
                                        d:DataContext="{d:DesignInstance {x:Type models:Word}}"
                                        Text="{Binding Path=Language2}"
                                        Foreground="{Binding Path=Checked, Converter={StaticResource WordCheckedToBrushConverter}}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <GridSplitter
                Grid.Column="3"
                Grid.Row="0"
                Style="{StaticResource AppGridSplitterStyle}" />

            <Grid
                Grid.Column="2"
                Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto" />
                    <ColumnDefinition
                        Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="*" />
                </Grid.RowDefinitions>

                <Grid
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="1.4*" />
                        <ColumnDefinition
                            Width="*" />
                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Column="0"
                        Style="{StaticResource FlatButtonStyle}"
                        Command="{Binding PreviousGroupCommand}"
                        IsEnabled="{Binding EnableElementDirectory[Previous], UpdateSourceTrigger=PropertyChanged}"
                        Content="{Binding PreviousGroupLabel, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBox
                        Grid.Column="1"
                        Style="{StaticResource WinTextBoxStyle}"
                        IsEnabled="{Binding EnableElementDirectory[GroupName], UpdateSourceTrigger=PropertyChanged}"
                        Text="{Binding Path=SelectedGroup.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <Button
                        Grid.Column="2"
                        Style="{StaticResource FlatButtonStyle}"
                        Command="{Binding NextGroupCommand}"
                        IsEnabled="{Binding EnableElementDirectory[Next], UpdateSourceTrigger=PropertyChanged}"
                        Content="{Binding NextGroupLabel, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>

                <Button
                    Grid.Column="0"
                    Grid.Row="1"
                    Style="{StaticResource FlatButtonStyle}"
                    MinWidth="250"
                    Content="{Binding Path=SelectedGroup.Language1, FallbackValue='', Converter={StaticResource LanguageTypeToStringConverter}}"
                    Command="{Binding Path=ChangeLanguage1Command}"
                    IsTabStop="False">
                </Button>

                <Button
                    Grid.Column="0"
                    Grid.Row="2"
                    Style="{StaticResource FlatButtonStyle}"
                    MinWidth="250"
                    Content="{Binding Path=SelectedGroup.Language2, FallbackValue='', Converter={StaticResource LanguageTypeToStringConverter}}"
                    Command="{Binding Path=ChangeLanguage2Command}"
                    IsTabStop="False">
                </Button>

                <Button
                    Grid.Column="0"
                    Grid.Row="3"
                    Style="{StaticResource FlatButtonStyle}"
                    MinWidth="250"
                    Content="Komentarz j. 1"
                    Command="{Binding Path=ChangeLanguage1Command}"
                    IsTabStop="False">
                </Button>

                <Button
                    Grid.Column="0"
                    Grid.Row="4"
                    Style="{StaticResource FlatButtonStyle}"
                    MinWidth="250"
                    Content="Komentarz j. 2"
                    Command="{Binding Path=ChangeLanguage2Command}"
                    IsTabStop="False">
                </Button>

                <TextBox
                    Grid.Column="1"
                    Grid.Row="1"
                    Style="{StaticResource WinTextBoxStyle}"
                    Text="{Binding Path=SelectedWord.Language1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding EnableElementDirectory[Language1], UpdateSourceTrigger=PropertyChanged}"
                    helpers:FocusExtension.IsFocused="{Binding Path=Language1IsFocused, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="10, 10, 10, 0"
                    TabIndex="0">
                </TextBox>

                <TextBox
                    Grid.Column="1"
                    Grid.Row="2"
                    Style="{StaticResource WinTextBoxStyle}"
                    IsEnabled="{Binding EnableElementDirectory[Language2], UpdateSourceTrigger=PropertyChanged}"
                    Text="{Binding Path=SelectedWord.Language2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="10, 0, 10, 10"
                    TabIndex="10" />

                <TextBox
                    Grid.Column="1"
                    Grid.Row="3"
                    Style="{StaticResource WinTextBoxStyle}"
                    IsEnabled="{Binding EnableElementDirectory[Language1Comment], UpdateSourceTrigger=PropertyChanged}"
                    Text="{Binding Path=SelectedWord.Language1Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="10, 10, 10, 0"
                    TabIndex="20" />

                <TextBox
                    Grid.Column="1"
                    Grid.Row="4"
                    Style="{StaticResource WinTextBoxStyle}"
                    IsEnabled="{Binding EnableElementDirectory[Language2Comment], UpdateSourceTrigger=PropertyChanged}"
                    Text="{Binding Path=SelectedWord.Language2Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="10, 0, 10, 10"
                    TabIndex="30" />

                <Grid
                    Grid.Column="0"
                    Grid.Row="5"
                    Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="*" />
                        <ColumnDefinition
                            Width="*" />
                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Column="0"
                        Style="{StaticResource FlatButtonStyle}"
                        Command="{Binding AddWordCommand}"
                        Content="Dodaj"
                        IsTabStop="False" />
                    <Button
                        Grid.Column="1"
                        Style="{StaticResource FlatButtonStyle}"
                        Command="{Binding RemoveWordCommand}"
                        Content="Usuń"
                        IsTabStop="False" />
                    <Button
                        Grid.Column="2"
                        Style="{StaticResource FlatButtonStyle}"
                        Command="{Binding Path=CheckUncheckWordCommand}"
                        Content="{Binding Path=SelectedWord.Checked, Converter={StaticResource WordCheckedToStringConverter}}"
                        IsTabStop="False" />
                    <Button
                        Grid.Column="3"
                        Style="{StaticResource FlatButtonStyle}"
                        Command="{Binding Path=TranslateWordCommnad}"
                        Content="Tłumacz"
                        IsTabStop="False" />
                </Grid>

                <UniformGrid
                    Grid.Row="6"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Columns="5">

                    <UniformGrid.Resources>
                        <Style
                            TargetType="{x:Type valueDescription:ValueDescription}">
                            <Setter
                                Property="Margin"
                                Value="10" />
                            <Setter
                                Property="Background"
                                Value="{DynamicResource UsedNormalBrush}" />
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource UsedPressedBrush}" />
                            <Setter
                                Property="FontWeight"
                                Value="Bold" />
                            <Setter
                                Property="FontSize"
                                Value="20" />
                            <Setter
                                Property="ValueFontSize"
                                Value="20" />
                            <Setter
                                Property="FontFamily"
                                Value="Arial" />
                        </Style>
                    </UniformGrid.Resources>

                    <valueDescription:ValueDescription
                        Description="Ilość grup"
                        Value="{Binding Path=Database.Groups.Count, FallbackValue=''}" />

                    <valueDescription:ValueDescription
                        Description="Numer grupy"
                        Value="{Binding Path=GroupNumber, FallbackValue=''}" />

                    <valueDescription:ValueDescription
                        Description="Szuflada"
                        Value="{Binding Path=Drawer, FallbackValue=''}">
                        <valueDescription:ValueDescription.Foreground>
                            <SolidColorBrush
                                Color="{Binding Path=SelectedWord.Drawer, Converter={StaticResource DrawerToColorConverter}}" />
                        </valueDescription:ValueDescription.Foreground>
                    </valueDescription:ValueDescription>

                    <valueDescription:ValueDescription
                        Description="Numer słowa"
                        Value="{Binding Path=WordNumber, FallbackValue=''}" />

                    <valueDescription:ValueDescription
                        Description="Ilość słów"
                        Value="{Binding Path=SelectedGroup.Words.Count, FallbackValue=''}" />

                </UniformGrid>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
